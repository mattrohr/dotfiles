#!/usr/bin/env bash

###############################################################################
# Navigation                                                                  #
###############################################################################

# `o` with no arguments opens the current directory in Finder, otherwise opens the given file or directory
o() {
    if [ $# -eq 0 ]; then
        open .;
    else
        open "$@";
    fi;
}

# Create a new directory then enter it
mkcd() {
    mkdir "${1}" && cd "${1}"
}

# Change working directory to the top-most Finder window location
cdf() {
    cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')";
}

# Go up [n] directories
up()
{
    local cdir="$(pwd)"
    if [[ "${1}" == "" ]]; then
        cdir="$(dirname "${cdir}")"
    elif ! [[ "${1}" =~ ^[0-9]+$ ]]; then
        echo "Error: argument must be a number"
    elif ! [[ "${1}" -gt "0" ]]; then
        echo "Error: argument must be positive"
    else
        for ((i=0; i<${1}; i++)); do
            local ncdir="$(dirname "${cdir}")"
            if [[ "${cdir}" == "${ncdir}" ]]; then
                break
            else
                cdir="${ncdir}"
            fi
        done
    fi
    cd "${cdir}"
}

###############################################################################
# Edit                                                                        #
###############################################################################

# `v` with no arguments opens the current directory in Visual Studio Code editor, otherwise opens the given file or directory
v() {
    if [ $# -eq 0 ]; then
        code .;
    else
        code "$@";
    fi;
}

# Check if a file contains non-ascii characters
nonascii() {
    LC_ALL=C grep -n '[^[:print:][:space:]]' "${1}"
}

###############################################################################
# General Utility                                                             #
###############################################################################

youtube-song() {
    youtube-dl --audio-format m4a -x "$@"
}

# Notify after terminal process completion with optional user-defined message 
# Example: `brew install mactex && notify "Mactex installed`
notify() {
    echo "$1" | terminal-notifier -sound default
}

###############################################################################
# Network                                                                     #
###############################################################################

# Serve current directory on localhost
serve() {
    ruby -run -e httpd . -p "${1:-8080}"
}